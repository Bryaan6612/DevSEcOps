name: GOAT Compile
 
on:
  push:
    branches:
      - main
 
jobs:
  integration:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
 
    steps:
      - name: "Obteniendo ultima version del codigo"
        uses: actions/checkout@v3
 
      - name: "Instalacion Java"
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
 
      - name: "Compilacion"
        run: ./mvnw clean install
 
      - name: "Verificar paquete"
        run: ls -ltra target

      - name: "Imagen Docker"
        run: "docker build -t prueba:latest ./"

      - name: "Muestra imagenes de docker"
        run: docker images



      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.key }}
          aws-secret-access-key: ${{ secrets.access_key }}
          aws-region: ${{ secrets.region }} 
 
      - name: "Imagen ECR"
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/p5y7p7o2
          docker build -t bryan .
          docker tag bryan:latest public.ecr.aws/p5y7p7o2/bryan:latest
          docker push public.ecr.aws/p5y7p7o2/bryan:latest

  
      
      - name: "Acondicionar Terraform"
        run: |
          cd Terraform 
          terraform init
          terraform validate
          terraform plan -out tfplan
          terraform apply tfplan >> results_tfplan.txt
          ip_webgoat=$(cat results_tfplan.txt | grep "My_ip = "| awk '{ print $3 }' | sed 's/*//g')
          sed -i "s/IP/$ip_webgoat/g" ../Ansible/inventario

      - name: "Install Python"
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Test with Checkov
        id: checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: Terraform
          framework: terraform 
          output_format: sarif, cli
          output_file_path: console,results.sarif
        continue-on-error: true

      - name: "Ansible"
        env:
            LLAVE2: ${{ secrets.LLAVE2 }}
        run: |
          sudo apt update
          sudo apt install -y ansible
          cd Ansible/
          echo "$LLAVE2" >> $HOME/key.pem
          sudo chmod 600 $HOME/key.pem
          export ANSIBLE_HOST_KEY_CHECKING=False
          ansible-playbook -i inventario server.yaml --become --private-key $HOME/key.pem
          sleep 45
        continue-on-error: true

      - name: "Descargar arachni"
        run: |
              wget https://github.com/Arachni/arachni/releases/download/v1.6.1.3/arachni-1.6.1.3-0.6.1.1-linux-x86_64.tar.gz
              tar -xvf arachni-1.6.1.3-0.6.1.1-linux-x86_64.tar.gz
        continue-on-error: true
 
      - name: "Ejecutar arachni"
        run: |
              ip_webgoat=$(terraform -chdir=Terraform/ output | grep "My_ip =" | tail -1 | cut -d '"' -f 2)
              ./arachni-1.6.1.3-0.6.1.1/bin/arachni --check=* http://$ip_webgoat:8080/WebGoat/login



      - name: "Destruir Infraestructura"
        run: |
          terraform -chdir=./Terraform/ plan -destroy -out tfplan
          terraform -chdir=./Terraform/ apply tfplan

                






