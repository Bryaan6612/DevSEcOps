name: GOAT Compile
 
on:
  push:
    branches:
      - main
 
jobs:
  integration:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
 
    steps:
      - name: "Obteniendo ultima version del codigo"
        uses: actions/checkout@v3
 
      - name: "Instalacion Java"
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
 
      - name: "Compilacion"
        run: ./mvnw clean install
 
      - name: "Verificar paquete"
        run: ls -ltra target
 

    steps:
      - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
      aws-access-key-id: ${{ secrets.key }}
      aws-secret-access-key: ${{ secrets.access_key }}
      aws-region: ${{ secrets.region }} 
 
      - name: "Imagen Docker"
        run: "docker build -t prueba:latest ./"
      
#      - name: Run Trivy vulnerability scanner
#        uses: aquasecurity/trivy-action@master
#        with:
#         image-ref: 'prueba'
#          format: 'table'
#         exit-code: '1'
#          ignore-unfixed: true
#          timeout: 10m0s
#        continue-on-error: true
         

      - name: "Muestra imagenes de docker"
        run: docker images
      
      - name: "Inicia container "
        run: docker run -d -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 --name elchido prueba

      - name: Ejecutar escaneo Arachnii
        run: |
          wget -O arachni.tar.gz https://github.com/Arachni/arachni/releases/download/v1.5.1/arachni-1.5.1-0.5.12-linux-x86_64.tar.gz
          tar xvzf arachni.tar.gz
          cd arachni-1.5.1-0.5.12/
          var_IP=$(docker inspect elchido | grep "IPAddress" | tail -1 | cut -d '"' -f 4)
          ./bin/arachni https://$var_IP:8080/WebGoat/login --output-verbose 1 --report-save-path=arachni-report.afr
 
      - name: "Corre container"
        run: docker start elchido

      - name: "Muestra contenedores"
        run: docker ps -a

