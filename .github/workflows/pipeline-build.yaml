name: GOAT Compile
 
on:
  push:
    branches:
      - main
 
jobs:
  integration:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
 
    steps:
      - name: "Obteniendo ultima version del codigo"
        uses: actions/checkout@v3
 
      - name: "Instalacion Java"
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
 
      - name: Actualizar piton
        run: |
              pip3 install requests
      
 
      - name: "Compilacion"
        run: ./mvnw clean install
 
      - name: "Verificar paquete"
        run: ls -ltra target
 
      - name: "Dependency-check"
        uses: dependency-check/Dependency-Check_Action@main
        env:
          JAVA_HOME: /opt/jdk
        id: Depcheck
        with:
          project: 'WebGoat'
          path: '.'
          format: 'XML'
          out: 'reportsDC' # this is the default, no need to specify unless you wish to override it
 
      - name: "Verificar reporte"
        run: ls -ltra reportsDC

      - name: "Subir Dep-Check scan a DefectDojo"
        run: |
              python3 upload-report.py --file reportsDC/dependency-check-report.xml --type-scan 'Dependency Check Scan'

 
      - name: "Imagen Docker"
        run: "docker build -t prueba:latest ./"
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
         image-ref: 'prueba'
         format: 'table'
         exit-code: '1'
         ignore-unfixed: true
         timeout: 10m0s
        continue-on-error: true
         

      - name: "Muestra imagenes de docker"
        run: docker images
      
      - name: "Inicia container "
        run: docker run -d -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 --name elchido prueba

      #- name: Ejecutar escaneo Arachnii
        #run: |
          #wget -O arachni.tar.gz https://github.com/Arachni/arachni/releases/download/v1.5.1/arachni-1.5.1-0.5.12-linux-x86_64.tar.gz
          #tar xvzf arachni.tar.gz
          #cd arachni-1.5.1-0.5.12/
          #var_IP=$(docker inspect elchido | grep "IPAddress" | tail -1 | cut -d '"' -f 4)
          #./bin/arachni https://$var_IP:8080/WebGoat/login --output-verbose 1 --report-save-path=arachni-report.afr
 
      - name: "Corre container"
        run: docker start elchido

      - name: "Muestra contenedores"
        run: docker ps -a


      - name: Run static analysis
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          security-checks: 'vuln,secret,config'
          ignore-unfixed: true
          format: 'json'
          output: 'trivy-results.json'
          severity: 'CRITICAL'


      - name: "Subir Trivy scan a DefectDojo"
        run: |
              python3 upload-report.py --file trivy-results.json --type-scan 'Trivy Scan' 

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'
          category: 'code'
          

        
    
      - name: Upload Test results
        uses: github/codeql-action/upload-sarif@v2
        with:
           name: Depcheck report
           sarif_file: ${{github.workspace}}/reports
           path: ${{github.workspace}}/reports

    # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: ${{ matrix.language }}

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1
